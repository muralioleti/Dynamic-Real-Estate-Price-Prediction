from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from xgboost import XGBRegressor
from sklearn.metrics import mean_absolute_error, r2_score

# Linear Regression Model (Baseline)
lr_model = LinearRegression()
lr_model.fit(X_train, y_train)
y_pred_lr = lr_model.predict(X_test)

# Random Forest Regressor with parallel processing
rf_model = RandomForestRegressor(n_estimators=100, random_state=42, n_jobs=-1)
rf_model.fit(X_train, y_train)
y_pred_rf = rf_model.predict(X_test)

# XGBoost Regressor with verbosity to monitor progress
xgb_model = XGBRegressor(n_estimators=100, random_state=42, n_jobs=-1, verbosity=1)
xgb_model.fit(X_train, y_train)
y_pred_xgb = xgb_model.predict(X_test)

# Model Evaluation
print('Linear Regression MAE:', mean_absolute_error(y_test, y_pred_lr))
print('Random Forest MAE:', mean_absolute_error(y_test, y_pred_rf))
print('XGBoost MAE:', mean_absolute_error(y_test, y_pred_xgb))

print('Linear Regression R2:', r2_score(y_test, y_pred_lr))
print('Random Forest R2:', r2_score(y_test, y_pred_rf))
print('XGBoost R2:', r2_score(y_test, y_pred_xgb))
